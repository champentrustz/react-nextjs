{"version":3,"file":"bundles\\pages\\index.js","sources":["webpack:///components/login/login-form.js","webpack:///components/login/timer.js","webpack:///./node_modules/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./node_modules/next/router.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///pages/index.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst StatusLogin = (props) => {\r\n    if(props.status_login == 'wrong') {\r\n        return (\r\n            <div>\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    ผิดพลาด! กรุณาตรวจสอบชื่อผู้ใช้หรือรหัสผ่านอีกครั้ง\r\n                </div>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n\r\n    return (\r\n       <div className=\"text-center\">\r\n           <img src=\"../../static/image/ssru00.png\"/>\r\n           <h2>GE Smart Classroom</h2>\r\n           <br/>\r\n           <div className=\"col-md-6 offset-md-3\">\r\n\r\n               <StatusLogin status_login={props.status_login}/>\r\n\r\n\r\n                   <select className=\"form-control\" style={{width:'150px'}} value={props.type} onChange={props.typeChange}>\r\n                       <option value=\"student\">นักศึกษา</option>\r\n                       <option value=\"teacher\">อาจารย์</option>\r\n                       <option value=\"ta\">ผู้ช่วยสอน</option>\r\n                       <option value=\"admin\">ผู้ดูแลระบบ</option>\r\n\r\n                   </select>\r\n\r\n            <br/>\r\n           <input type=\"text\" className=\"form-control\" value={props.username} onChange={props.usernameChange}/>\r\n           <br/>\r\n           <input type=\"password\" className=\"form-control\" value={props.password} onChange={props.passwordChange}/>\r\n               <br/>\r\n               <button className=\"btn btn-success btn-block\" onClick={props.login}>เข้าสู่ระบบ</button>\r\n               <br/>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n\n\n\n// WEBPACK FOOTER //\n// components/login/login-form.js","import React from 'react'\r\nconst Timer = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n            </div>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n\n\n\n// WEBPACK FOOTER //\n// components/login/timer.js","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isomorphic-fetch/fetch-npm-browserify.js\n// module id = ./node_modules/isomorphic-fetch/fetch-npm-browserify.js\n// module chunks = 4 5","module.exports = require('./dist/lib/router')\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/next/router.js\n// module id = ./node_modules/next/router.js\n// module chunks = 1 5","module.exports = function(originalModule) {\r\n\tif(!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true,\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/harmony-module.js\n// module id = ./node_modules/webpack/buildin/harmony-module.js\n// module chunks = 1 4 5","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = ./node_modules/whatwg-fetch/fetch.js\n// module chunks = 4 5","import React, { Component } from 'react'\r\nimport 'isomorphic-fetch'\r\nimport Timer from '../components/login/timer'\r\nimport LoginForm from '../components/login/login-form'\r\nimport Router from 'next/router'\r\n\r\nexport default class index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            seconds: 0,\r\n            status_login : '',\r\n            username : '',\r\n            password : '',\r\n            type : 'student',\r\n\r\n        };\r\n        this.testPrint = this.testPrint.bind(this);\r\n        this.usernameChange = this.usernameChange.bind(this);\r\n        this.passwordChange = this.passwordChange.bind(this);\r\n        this.typeChange = this.typeChange.bind(this);\r\n        this.login = this.login.bind(this);\r\n\r\n    }\r\n\r\n    tick() {\r\n        this.setState((prevState, props) => {\r\n            return {\r\n                seconds: prevState.seconds + 1\r\n            }\r\n        });\r\n    }\r\n\r\n    testPrint() {\r\n        console.log('test');\r\n    }\r\n\r\n\r\n    async login(){\r\n        if(this.state.type == 'student'){\r\n\r\n            const resp = await  fetch('http://ge-tss.ssru.ac.th/index.php/Checkinapi/studentlogin', {\r\n                method: 'post',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    apiKey : \"afab7e2f35fe11c45116e2315e7387b6\",\r\n                    sReturn : \"1\",\r\n                    student_username : this.state.username,\r\n                    student_password : this.state.password\r\n                }),\r\n            });\r\n\r\n            const  data  = await resp.json();\r\n            const dataStudent = data.data;\r\n\r\n            if (data.status === 1) {\r\n\r\n                localStorage.setItem('isStudent', 'true');\r\n                localStorage.setItem('studentFirstName', dataStudent.studentName);\r\n                localStorage.setItem('studentLastName', dataStudent.studentLastname);\r\n                localStorage.setItem('studentUsername', this.state.username);\r\n                localStorage.setItem('studentPassword', this.state.password);\r\n                localStorage.setItem('studentGender', dataStudent.studentGender);\r\n                Router.push('/student-course');\r\n                this.props.checkLogin('true');\r\n\r\n            }\r\n            else{\r\n                this.setState({username: ''});\r\n                this.setState({password: ''});\r\n                this.setState({status_login: 'wrong'});\r\n            }\r\n\r\n        }\r\n        else if(this.state.type == 'teacher'){\r\n\r\n            const resp = await fetch('http://ge-tss.ssru.ac.th/index.php/Checkinapi/teacherlogin', {\r\n                method: 'post',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    apiKey : \"afab7e2f35fe11c45116e2315e7387b6\",\r\n                    sReturn : \"1\",\r\n                    teacher_username : this.state.username,\r\n                    teacher_password : this.state.password\r\n                }),\r\n            });\r\n            const  data  = await resp.json();\r\n            const dataTeacher = data.data;\r\n\r\n            if (data.status === 1) {\r\n                localStorage.setItem('isTeacher', 'true');\r\n                localStorage.setItem('teacherID', dataTeacher.teacherID);\r\n                localStorage.setItem('teacherFirstName', dataTeacher.teacherName);\r\n                localStorage.setItem('teacherLastName', dataTeacher.teacherLastname);\r\n                localStorage.setItem('teacherUsername', this.state.username);\r\n                localStorage.setItem('teacherPassword', this.state.password);\r\n                Router.push('/teacher-course');\r\n                this.props.checkLogin('true');\r\n            }\r\n            else{\r\n                this.setState({username: ''});\r\n                this.setState({password: ''});\r\n                this.setState({status_login: 'wrong'});\r\n            }\r\n\r\n        }\r\n        else if(this.state.type == 'ta'){\r\n\r\n            const resp = await fetch('http://ge-tss.ssru.ac.th/index.php/Checkinapi/talogin', {\r\n                method: 'post',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    apiKey : \"afab7e2f35fe11c45116e2315e7387b6\",\r\n                    sReturn : \"1\",\r\n                    ta_username : this.state.username,\r\n                    ta_password : this.state.password\r\n                }),\r\n            });\r\n\r\n            const  data  = await resp.json();\r\n            const dataTeacherAssistant = data.data;\r\n\r\n            if (data.status === 1) {\r\n                localStorage.setItem('isTeacherAssistant', 'true');\r\n                localStorage.setItem('teacherAssistantFirstName', dataTeacherAssistant.taName);\r\n                localStorage.setItem('teacherAssistantLastName', dataTeacherAssistant.taLastname);\r\n                localStorage.setItem('teacherAssistantUsername', this.state.username);\r\n                localStorage.setItem('teacherAssistantPassword', this.state.password);\r\n                Router.push('/ta-course');\r\n                this.props.checkLogin('true');\r\n            }\r\n            else{\r\n                this.setState({username: ''});\r\n                this.setState({password: ''});\r\n                this.setState({status_login: 'wrong'});\r\n            }\r\n\r\n        }\r\n        else if(this.state.type == 'admin'){\r\n\r\n            const resp = await fetch('http://ge-tss.ssru.ac.th/index.php/Checkinapi/talogin', {\r\n                method: 'post',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    apiKey : \"afab7e2f35fe11c45116e2315e7387b6\",\r\n                    sReturn : \"1\",\r\n                    ta_username : this.state.username,\r\n                    ta_password : this.state.password\r\n                }),\r\n            });\r\n\r\n            const  data  = await resp.json();\r\n            const dataTeacherAssistant = data.data;\r\n\r\n            if (data.status === 1) {\r\n                localStorage.setItem('isAdmin', 'true');\r\n                localStorage.setItem('adminFirstName', dataTeacherAssistant.taName);\r\n                localStorage.setItem('adminLastName', dataTeacherAssistant.taLastname);\r\n                Router.push('/admin');\r\n                this.props.checkLogin('true');\r\n            }\r\n            else{\r\n                this.setState({username: ''});\r\n                this.setState({password: ''});\r\n                this.setState({status_login: 'wrong'});\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    usernameChange(event){\r\n        this.setState({username: event.target.value});\r\n    }\r\n\r\n    passwordChange(event){\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    typeChange(event){\r\n        this.setState({type: event.target.value});\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n        const isStudent =   localStorage.getItem(\"isStudent\");\r\n\r\n        if(isStudent == 'true'){\r\n            Router.push('/student-course')\r\n        }\r\n\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    static async getInitialProps () {\r\n\r\n        const res = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n        const json = await res.json()\r\n        const message = \"hello\";\r\n\r\n        return {\r\n            json,\r\n            message\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n\r\n\r\n        return (\r\n\r\n                <div className=\"container\" style={{'paddingTop':'80px'}}>\r\n\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-md-12\">\r\n\r\n                            <LoginForm message={this.props.message} username={this.state.username} password={this.state.password}\r\n                            usernameChange={this.usernameChange} passwordChange={this.passwordChange} type={this.state.type}\r\n                            typeChange={this.typeChange} status_login={this.state.status_login} login={this.login}\r\n                           />\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                             {/*<Card json={this.props.json} testPrint={this.testPrint}/>*/}\r\n\r\n                </div>\r\n\r\n\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;ACpDA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvjdA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;;;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;;;;;;;;;;;;;AAIA;;;;;;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AALA;AACA;;AADA;;AAaA;AACA;;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;AAEA;;;;;;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AALA;AACA;;AADA;;AAYA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;AAEA;;;;;;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AALA;AACA;;AADA;;AAaA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;AAEA;;;;;;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AALA;AACA;;AADA;;AAaA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;AAKA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;AAKA;AACA;AACA;;;;;AACA;;;;;AAIA;AACA;;;;;;;;;;;;;;;AAiBA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAgBA;;;;;;;;;;;;;AAvCA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AAEA;AACA;AACA;AAFA;AACA;;;;;;;;;;;;;;;;AA/MA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}